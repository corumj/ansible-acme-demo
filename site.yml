---

# Let's Encrypt certificates via ACME
- hosts: node1
  become: yes
  gather_facts: True
  vars:
    letsencrypt_account_email: "corum@me.com"
    
    # staging/testing - switch to this while testing so you don't consume API calls
    letsencrypt_acme_directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
    
    # production - once testing is complete, switch to this to create the real cert
    # letsencrypt_acme_directory: "https://acme-v02.api.letsencrypt.org/directory"
    letsencrypt_acme_version: 2
    letsencrypt_challenge: "http-01"
    letsencrypt_agreement: "https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf"
    letsencrypt_remaining_days: 45
    letsencrypt_cert_dir: "{{ playbook_dir }}/letsencrypt-certificates"

  tasks:

    # this will delete local outdated challenge files
    - name: Find outdated challenge files
      find:
        paths: "{{ playbook_dir }}/letsencrypt-challenges/"
        recurse: no
        file_type: file
        age: "1h"
      register: outdated_challenge_files
      become: no
      run_once: true
      delegate_to: localhost


    - name: Delete outdated challenge files
      file:
        state: absent
        path: "{{ item.path }}"
      with_items: "{{ outdated_challenge_files.files }}"
      become: no
      run_once: true
      delegate_to: localhost

    - name: Create www-data user 
      user:
        name: www-data
        state: present 
        shell: /bin/bash 
        groups: wheel 

    - name: Handle certificate
      include: "{{ playbook_dir }}/letsencrypt.yml"
      with_items:
        - test.peripatetic.me
      loop_control:
        loop_var: domain

  handlers:

    - name: reload nginx
      service: 
        name: nginx 
        state: restarted